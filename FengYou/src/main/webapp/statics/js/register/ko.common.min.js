ko.bindingHandlers.slider = {
	init : function(element, valueAccessor, allBindingsAccessor) {
		var options = allBindingsAccessor().sliderOptions || {};
		$(element).slider(options);
		ko.utils.registerEventHandler(element, "slidechange", function(event,
				ui) {
			var observable = valueAccessor();
			observable(ui.value);
		});
		ko.utils.domNodeDisposal.addDisposeCallback(element, function() {
			$(element).slider("destroy");
		});
		ko.utils.registerEventHandler(element, "slide", function(event, ui) {
			var observable = valueAccessor();
			observable(ui.value);
		});
	},
	update : function(element, valueAccessor) {
		var value = ko.utils.unwrapObservable(valueAccessor());
		if (isNaN(value)) {
			value = 0;
		}
		$(element).slider("value", value);
	}
};
ko.validation.localize({
	required : "必填",
	min : "最小{0}",
	max : "最大{0}",
	minLength : "最少{0}个字符",
	maxLength : "最多{0}个字符",
	pattern : "模式不匹配",
	step : "The value must increment by {0}",
	email : "邮箱格式不对",
	date : "日期格式不对",
	dateISO : "Please enter a proper date",
	number : "数字格式不对",
	digit : "Please enter a digit",
	phoneUS : "Please specify a valid phone number",
	equal : "密码和确认密码不一致",
	notEqual : "Please choose another value",
	unique : "Please make sure the value is unique",
});
ko.bindingHandlers.initializeValue = {
	init : function(element, valueAccessor) {
		valueAccessor()(element.getAttribute("value"));
	},
	update : function(element, valueAccessor) {
		var value = valueAccessor();
		element.setAttribute("value", ko.utils.unwrapObservable(value));
	}
};